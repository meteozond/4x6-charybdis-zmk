#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2

&sl {
    release-after-ms = <250>;
};

&mt {
    tapping-term-ms = <200>;
    require-prior-idle-ms = <150>;
};

/ {
    chosen { zmk,matrix_transform = &six_four_transform; };

    #include "combos.dtsi"

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };
    };


    keymap {
        compatible = "zmk,keymap";
        Base {
            label = "Base";
            bindings = <
                &kp ESC    &kp 1    &kp 2    &kp 3    &kp 4    &kp 5    &kp 6    &kp 7    &kp 8    &kp 9    &kp 0    &kp MINS
                &kp TAB    &kp Q    &kp W    &kp E    &kp R    &kp T    &kp Y    &kp U    &kp I    &kp O    &kp P    &kp BSLS
                &kp LSFT   &kp A    &kp S    &kp D    &kp F    &kp G    &kp H    &kp J    &kp K    &kp L    &kp SCLN &kp QUOT
                &kp LCTL   &kp Z    &kp X    &kp C    &kp V    &kp B    &kp N    &kp M    &kp COMM &kp DOT  &kp SLSH &kp LALT
                                 &kp LGUI   &kp SPC  &mo LOWER &mo RAISE &kp ENT
            >;
        };

        Lower {
            label = "Lower";
            bindings = <
                &kp TILD   &kp EXLM &kp AT   &kp HASH &kp DLR  &kp PERC &kp CIRC &kp AMPR &kp ASTR &kp LPRN &kp RPRN &kp UNDS
                &kp RGB_MOD &none    &none    &none    &none    &none    &kp LBRC &kp N7   &kp N8   &kp N9   &kp RBRC &none
                &kp RGB_TOG &kp LGUI &kp LALT &kp LCTL &kp LSFT &none    &kp PPLS &kp N4   &kp N5   &kp N6   &kp PMNS &kp PEQL
                &kp RGB_RMOD &none    &none    &none    &kp EE_CLR &kp QK_BOOT &kp PAST &kp N1   &kp N2   &kp N3   &kp PSLS &kp PDOT
                                 &none      &none     &trans    &none    &trans
            >;
        };

        Raise {
            label = "Raise";
            bindings = <
                &kp F12    &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &kp F11
                &kp MNXT   &none    &none    &none    &none    &none    &none    &none    &none    &none    &none    &kp VOLU
                &kp MPLY   &kp LEFT &kp UP   &kp DOWN &kp RGHT &none    &none    &kp RSFT &kp RCTL &kp RALT &kp RGUI &kp MUTE
                &kp MPRV   &kp HOME &kp PGUP &kp PGDN &kp END  &none    &kp QK_BOOT &kp EE_CLR &none    &none    &none    &kp VOLD
                                 &trans     &trans    &none    &trans   &none
            >;
        };
    };
};
